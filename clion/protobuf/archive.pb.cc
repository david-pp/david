// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: archive.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "archive.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ArchiveMemberProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ArchiveMemberProto> {
} _ArchiveMemberProto_default_instance_;
class ArchiveProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ArchiveProto> {
} _ArchiveProto_default_instance_;
class SequenceProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SequenceProto> {
} _SequenceProto_default_instance_;
class AssociateProto_ValueTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AssociateProto_ValueType> {
} _AssociateProto_ValueType_default_instance_;
class AssociateProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AssociateProto> {
} _AssociateProto_default_instance_;
class UInt32ProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UInt32Proto> {
} _UInt32Proto_default_instance_;
class StringProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringProto> {
} _StringProto_default_instance_;

namespace protobuf_archive_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveMemberProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveMemberProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveMemberProto, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveMemberProto, hexdata_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveProto, members_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SequenceProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SequenceProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SequenceProto, values_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateProto_ValueType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateProto_ValueType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateProto_ValueType, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateProto_ValueType, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateProto, values_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt32Proto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt32Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt32Proto, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringProto, value_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(ArchiveMemberProto)},
  { 8, 13, sizeof(ArchiveProto)},
  { 14, 19, sizeof(SequenceProto)},
  { 20, 26, sizeof(AssociateProto_ValueType)},
  { 28, 33, sizeof(AssociateProto)},
  { 34, 39, sizeof(UInt32Proto)},
  { 40, 45, sizeof(StringProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ArchiveMemberProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ArchiveProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SequenceProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AssociateProto_ValueType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AssociateProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UInt32Proto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "archive.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _ArchiveMemberProto_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ArchiveProto_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SequenceProto_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AssociateProto_ValueType_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _AssociateProto_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _UInt32Proto_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _StringProto_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ArchiveMemberProto_default_instance_.DefaultConstruct();
  _ArchiveProto_default_instance_.DefaultConstruct();
  _SequenceProto_default_instance_.DefaultConstruct();
  _AssociateProto_ValueType_default_instance_.DefaultConstruct();
  _AssociateProto_default_instance_.DefaultConstruct();
  _UInt32Proto_default_instance_.DefaultConstruct();
  _StringProto_default_instance_.DefaultConstruct();
  _AssociateProto_ValueType_default_instance_.get_mutable()->key_ = const_cast< ::ArchiveMemberProto*>(
      ::ArchiveMemberProto::internal_default_instance());
  _AssociateProto_ValueType_default_instance_.get_mutable()->value_ = const_cast< ::ArchiveMemberProto*>(
      ::ArchiveMemberProto::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rarchive.proto\"5\n\022ArchiveMemberProto\022\016\n"
      "\006number\030\001 \001(\r\022\017\n\007hexdata\030\002 \001(\014\"4\n\014Archiv"
      "eProto\022$\n\007members\030\001 \003(\0132\023.ArchiveMemberP"
      "roto\"4\n\rSequenceProto\022#\n\006values\030\001 \003(\0132\023."
      "ArchiveMemberProto\"\216\001\n\016AssociateProto\022)\n"
      "\006values\030\001 \003(\0132\031.AssociateProto.ValueType"
      "\032Q\n\tValueType\022 \n\003key\030\001 \001(\0132\023.ArchiveMemb"
      "erProto\022\"\n\005value\030\002 \001(\0132\023.ArchiveMemberPr"
      "oto\"\034\n\013UInt32Proto\022\r\n\005value\030\001 \001(\r\"\034\n\013Str"
      "ingProto\022\r\n\005value\030\001 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 383);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "archive.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_archive_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArchiveMemberProto::kNumberFieldNumber;
const int ArchiveMemberProto::kHexdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArchiveMemberProto::ArchiveMemberProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_archive_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArchiveMemberProto)
}
ArchiveMemberProto::ArchiveMemberProto(const ArchiveMemberProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hexdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hexdata()) {
    hexdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hexdata_);
  }
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:ArchiveMemberProto)
}

void ArchiveMemberProto::SharedCtor() {
  _cached_size_ = 0;
  hexdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = 0u;
}

ArchiveMemberProto::~ArchiveMemberProto() {
  // @@protoc_insertion_point(destructor:ArchiveMemberProto)
  SharedDtor();
}

void ArchiveMemberProto::SharedDtor() {
  hexdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ArchiveMemberProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArchiveMemberProto::descriptor() {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[0].descriptor;
}

const ArchiveMemberProto& ArchiveMemberProto::default_instance() {
  protobuf_archive_2eproto::InitDefaults();
  return *internal_default_instance();
}

ArchiveMemberProto* ArchiveMemberProto::New(::google::protobuf::Arena* arena) const {
  ArchiveMemberProto* n = new ArchiveMemberProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArchiveMemberProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ArchiveMemberProto)
  if (has_hexdata()) {
    GOOGLE_DCHECK(!hexdata_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*hexdata_.UnsafeRawStringPointer())->clear();
  }
  number_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ArchiveMemberProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArchiveMemberProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 number = 1;
      case 1: {
        if (tag == 8u) {
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hexdata = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArchiveMemberProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArchiveMemberProto)
  return false;
#undef DO_
}

void ArchiveMemberProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArchiveMemberProto)
  // optional uint32 number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->number(), output);
  }

  // optional bytes hexdata = 2;
  if (has_hexdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->hexdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArchiveMemberProto)
}

::google::protobuf::uint8* ArchiveMemberProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArchiveMemberProto)
  // optional uint32 number = 1;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->number(), target);
  }

  // optional bytes hexdata = 2;
  if (has_hexdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->hexdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArchiveMemberProto)
  return target;
}

size_t ArchiveMemberProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArchiveMemberProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes hexdata = 2;
    if (has_hexdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->hexdata());
    }

    // optional uint32 number = 1;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArchiveMemberProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArchiveMemberProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ArchiveMemberProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArchiveMemberProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArchiveMemberProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArchiveMemberProto)
    MergeFrom(*source);
  }
}

void ArchiveMemberProto::MergeFrom(const ArchiveMemberProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArchiveMemberProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_hexdata()) {
      set_has_hexdata();
      hexdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hexdata_);
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
}

void ArchiveMemberProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArchiveMemberProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArchiveMemberProto::CopyFrom(const ArchiveMemberProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArchiveMemberProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArchiveMemberProto::IsInitialized() const {
  return true;
}

void ArchiveMemberProto::Swap(ArchiveMemberProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArchiveMemberProto::InternalSwap(ArchiveMemberProto* other) {
  hexdata_.Swap(&other->hexdata_);
  std::swap(number_, other->number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArchiveMemberProto::GetMetadata() const {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArchiveMemberProto

// optional uint32 number = 1;
bool ArchiveMemberProto::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ArchiveMemberProto::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
void ArchiveMemberProto::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void ArchiveMemberProto::clear_number() {
  number_ = 0u;
  clear_has_number();
}
::google::protobuf::uint32 ArchiveMemberProto::number() const {
  // @@protoc_insertion_point(field_get:ArchiveMemberProto.number)
  return number_;
}
void ArchiveMemberProto::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:ArchiveMemberProto.number)
}

// optional bytes hexdata = 2;
bool ArchiveMemberProto::has_hexdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ArchiveMemberProto::set_has_hexdata() {
  _has_bits_[0] |= 0x00000001u;
}
void ArchiveMemberProto::clear_has_hexdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void ArchiveMemberProto::clear_hexdata() {
  hexdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hexdata();
}
const ::std::string& ArchiveMemberProto::hexdata() const {
  // @@protoc_insertion_point(field_get:ArchiveMemberProto.hexdata)
  return hexdata_.GetNoArena();
}
void ArchiveMemberProto::set_hexdata(const ::std::string& value) {
  set_has_hexdata();
  hexdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ArchiveMemberProto.hexdata)
}
#if LANG_CXX11
void ArchiveMemberProto::set_hexdata(::std::string&& value) {
  set_has_hexdata();
  hexdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ArchiveMemberProto.hexdata)
}
#endif
void ArchiveMemberProto::set_hexdata(const char* value) {
  set_has_hexdata();
  hexdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ArchiveMemberProto.hexdata)
}
void ArchiveMemberProto::set_hexdata(const void* value, size_t size) {
  set_has_hexdata();
  hexdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ArchiveMemberProto.hexdata)
}
::std::string* ArchiveMemberProto::mutable_hexdata() {
  set_has_hexdata();
  // @@protoc_insertion_point(field_mutable:ArchiveMemberProto.hexdata)
  return hexdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ArchiveMemberProto::release_hexdata() {
  // @@protoc_insertion_point(field_release:ArchiveMemberProto.hexdata)
  clear_has_hexdata();
  return hexdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ArchiveMemberProto::set_allocated_hexdata(::std::string* hexdata) {
  if (hexdata != NULL) {
    set_has_hexdata();
  } else {
    clear_has_hexdata();
  }
  hexdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hexdata);
  // @@protoc_insertion_point(field_set_allocated:ArchiveMemberProto.hexdata)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArchiveProto::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArchiveProto::ArchiveProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_archive_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArchiveProto)
}
ArchiveProto::ArchiveProto(const ArchiveProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ArchiveProto)
}

void ArchiveProto::SharedCtor() {
  _cached_size_ = 0;
}

ArchiveProto::~ArchiveProto() {
  // @@protoc_insertion_point(destructor:ArchiveProto)
  SharedDtor();
}

void ArchiveProto::SharedDtor() {
}

void ArchiveProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArchiveProto::descriptor() {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[1].descriptor;
}

const ArchiveProto& ArchiveProto::default_instance() {
  protobuf_archive_2eproto::InitDefaults();
  return *internal_default_instance();
}

ArchiveProto* ArchiveProto::New(::google::protobuf::Arena* arena) const {
  ArchiveProto* n = new ArchiveProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArchiveProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ArchiveProto)
  members_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ArchiveProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArchiveProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ArchiveMemberProto members = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArchiveProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArchiveProto)
  return false;
#undef DO_
}

void ArchiveProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArchiveProto)
  // repeated .ArchiveMemberProto members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->members(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ArchiveProto)
}

::google::protobuf::uint8* ArchiveProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArchiveProto)
  // repeated .ArchiveMemberProto members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->members(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArchiveProto)
  return target;
}

size_t ArchiveProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArchiveProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ArchiveMemberProto members = 1;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArchiveProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArchiveProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ArchiveProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArchiveProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArchiveProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArchiveProto)
    MergeFrom(*source);
  }
}

void ArchiveProto::MergeFrom(const ArchiveProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArchiveProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
}

void ArchiveProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArchiveProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArchiveProto::CopyFrom(const ArchiveProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArchiveProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArchiveProto::IsInitialized() const {
  return true;
}

void ArchiveProto::Swap(ArchiveProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArchiveProto::InternalSwap(ArchiveProto* other) {
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArchiveProto::GetMetadata() const {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArchiveProto

// repeated .ArchiveMemberProto members = 1;
int ArchiveProto::members_size() const {
  return members_.size();
}
void ArchiveProto::clear_members() {
  members_.Clear();
}
const ::ArchiveMemberProto& ArchiveProto::members(int index) const {
  // @@protoc_insertion_point(field_get:ArchiveProto.members)
  return members_.Get(index);
}
::ArchiveMemberProto* ArchiveProto::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:ArchiveProto.members)
  return members_.Mutable(index);
}
::ArchiveMemberProto* ArchiveProto::add_members() {
  // @@protoc_insertion_point(field_add:ArchiveProto.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::ArchiveMemberProto >*
ArchiveProto::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:ArchiveProto.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::ArchiveMemberProto >&
ArchiveProto::members() const {
  // @@protoc_insertion_point(field_list:ArchiveProto.members)
  return members_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SequenceProto::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SequenceProto::SequenceProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_archive_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SequenceProto)
}
SequenceProto::SequenceProto(const SequenceProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SequenceProto)
}

void SequenceProto::SharedCtor() {
  _cached_size_ = 0;
}

SequenceProto::~SequenceProto() {
  // @@protoc_insertion_point(destructor:SequenceProto)
  SharedDtor();
}

void SequenceProto::SharedDtor() {
}

void SequenceProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SequenceProto::descriptor() {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[2].descriptor;
}

const SequenceProto& SequenceProto::default_instance() {
  protobuf_archive_2eproto::InitDefaults();
  return *internal_default_instance();
}

SequenceProto* SequenceProto::New(::google::protobuf::Arena* arena) const {
  SequenceProto* n = new SequenceProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SequenceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:SequenceProto)
  values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SequenceProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SequenceProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ArchiveMemberProto values = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SequenceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SequenceProto)
  return false;
#undef DO_
}

void SequenceProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SequenceProto)
  // repeated .ArchiveMemberProto values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SequenceProto)
}

::google::protobuf::uint8* SequenceProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SequenceProto)
  // repeated .ArchiveMemberProto values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->values(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SequenceProto)
  return target;
}

size_t SequenceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SequenceProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ArchiveMemberProto values = 1;
  {
    unsigned int count = this->values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SequenceProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SequenceProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SequenceProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SequenceProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SequenceProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SequenceProto)
    MergeFrom(*source);
  }
}

void SequenceProto::MergeFrom(const SequenceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SequenceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
}

void SequenceProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SequenceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SequenceProto::CopyFrom(const SequenceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SequenceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SequenceProto::IsInitialized() const {
  return true;
}

void SequenceProto::Swap(SequenceProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SequenceProto::InternalSwap(SequenceProto* other) {
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SequenceProto::GetMetadata() const {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SequenceProto

// repeated .ArchiveMemberProto values = 1;
int SequenceProto::values_size() const {
  return values_.size();
}
void SequenceProto::clear_values() {
  values_.Clear();
}
const ::ArchiveMemberProto& SequenceProto::values(int index) const {
  // @@protoc_insertion_point(field_get:SequenceProto.values)
  return values_.Get(index);
}
::ArchiveMemberProto* SequenceProto::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:SequenceProto.values)
  return values_.Mutable(index);
}
::ArchiveMemberProto* SequenceProto::add_values() {
  // @@protoc_insertion_point(field_add:SequenceProto.values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::ArchiveMemberProto >*
SequenceProto::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:SequenceProto.values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::ArchiveMemberProto >&
SequenceProto::values() const {
  // @@protoc_insertion_point(field_list:SequenceProto.values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssociateProto_ValueType::kKeyFieldNumber;
const int AssociateProto_ValueType::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssociateProto_ValueType::AssociateProto_ValueType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_archive_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AssociateProto.ValueType)
}
AssociateProto_ValueType::AssociateProto_ValueType(const AssociateProto_ValueType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::ArchiveMemberProto(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::ArchiveMemberProto(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:AssociateProto.ValueType)
}

void AssociateProto_ValueType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&key_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_) + sizeof(value_));
}

AssociateProto_ValueType::~AssociateProto_ValueType() {
  // @@protoc_insertion_point(destructor:AssociateProto.ValueType)
  SharedDtor();
}

void AssociateProto_ValueType::SharedDtor() {
  if (this != internal_default_instance()) {
    delete key_;
  }
  if (this != internal_default_instance()) {
    delete value_;
  }
}

void AssociateProto_ValueType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssociateProto_ValueType::descriptor() {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[3].descriptor;
}

const AssociateProto_ValueType& AssociateProto_ValueType::default_instance() {
  protobuf_archive_2eproto::InitDefaults();
  return *internal_default_instance();
}

AssociateProto_ValueType* AssociateProto_ValueType::New(::google::protobuf::Arena* arena) const {
  AssociateProto_ValueType* n = new AssociateProto_ValueType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssociateProto_ValueType::Clear() {
// @@protoc_insertion_point(message_clear_start:AssociateProto.ValueType)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      GOOGLE_DCHECK(key_ != NULL);
      key_->::ArchiveMemberProto::Clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->::ArchiveMemberProto::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AssociateProto_ValueType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AssociateProto.ValueType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ArchiveMemberProto key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ArchiveMemberProto value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AssociateProto.ValueType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AssociateProto.ValueType)
  return false;
#undef DO_
}

void AssociateProto_ValueType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AssociateProto.ValueType)
  // optional .ArchiveMemberProto key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // optional .ArchiveMemberProto value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AssociateProto.ValueType)
}

::google::protobuf::uint8* AssociateProto_ValueType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AssociateProto.ValueType)
  // optional .ArchiveMemberProto key = 1;
  if (has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->key_, false, target);
  }

  // optional .ArchiveMemberProto value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AssociateProto.ValueType)
  return target;
}

size_t AssociateProto_ValueType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssociateProto.ValueType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .ArchiveMemberProto key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->key_);
    }

    // optional .ArchiveMemberProto value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->value_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssociateProto_ValueType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AssociateProto.ValueType)
  GOOGLE_DCHECK_NE(&from, this);
  const AssociateProto_ValueType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssociateProto_ValueType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AssociateProto.ValueType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AssociateProto.ValueType)
    MergeFrom(*source);
  }
}

void AssociateProto_ValueType::MergeFrom(const AssociateProto_ValueType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AssociateProto.ValueType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_key()) {
      mutable_key()->::ArchiveMemberProto::MergeFrom(from.key());
    }
    if (from.has_value()) {
      mutable_value()->::ArchiveMemberProto::MergeFrom(from.value());
    }
  }
}

void AssociateProto_ValueType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AssociateProto.ValueType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssociateProto_ValueType::CopyFrom(const AssociateProto_ValueType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssociateProto.ValueType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssociateProto_ValueType::IsInitialized() const {
  return true;
}

void AssociateProto_ValueType::Swap(AssociateProto_ValueType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssociateProto_ValueType::InternalSwap(AssociateProto_ValueType* other) {
  std::swap(key_, other->key_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssociateProto_ValueType::GetMetadata() const {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssociateProto_ValueType

// optional .ArchiveMemberProto key = 1;
bool AssociateProto_ValueType::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AssociateProto_ValueType::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void AssociateProto_ValueType::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void AssociateProto_ValueType::clear_key() {
  if (key_ != NULL) key_->::ArchiveMemberProto::Clear();
  clear_has_key();
}
const ::ArchiveMemberProto& AssociateProto_ValueType::key() const {
  // @@protoc_insertion_point(field_get:AssociateProto.ValueType.key)
  return key_ != NULL ? *key_
                         : *::ArchiveMemberProto::internal_default_instance();
}
::ArchiveMemberProto* AssociateProto_ValueType::mutable_key() {
  set_has_key();
  if (key_ == NULL) {
    key_ = new ::ArchiveMemberProto;
  }
  // @@protoc_insertion_point(field_mutable:AssociateProto.ValueType.key)
  return key_;
}
::ArchiveMemberProto* AssociateProto_ValueType::release_key() {
  // @@protoc_insertion_point(field_release:AssociateProto.ValueType.key)
  clear_has_key();
  ::ArchiveMemberProto* temp = key_;
  key_ = NULL;
  return temp;
}
void AssociateProto_ValueType::set_allocated_key(::ArchiveMemberProto* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:AssociateProto.ValueType.key)
}

// optional .ArchiveMemberProto value = 2;
bool AssociateProto_ValueType::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AssociateProto_ValueType::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void AssociateProto_ValueType::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void AssociateProto_ValueType::clear_value() {
  if (value_ != NULL) value_->::ArchiveMemberProto::Clear();
  clear_has_value();
}
const ::ArchiveMemberProto& AssociateProto_ValueType::value() const {
  // @@protoc_insertion_point(field_get:AssociateProto.ValueType.value)
  return value_ != NULL ? *value_
                         : *::ArchiveMemberProto::internal_default_instance();
}
::ArchiveMemberProto* AssociateProto_ValueType::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::ArchiveMemberProto;
  }
  // @@protoc_insertion_point(field_mutable:AssociateProto.ValueType.value)
  return value_;
}
::ArchiveMemberProto* AssociateProto_ValueType::release_value() {
  // @@protoc_insertion_point(field_release:AssociateProto.ValueType.value)
  clear_has_value();
  ::ArchiveMemberProto* temp = value_;
  value_ = NULL;
  return temp;
}
void AssociateProto_ValueType::set_allocated_value(::ArchiveMemberProto* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:AssociateProto.ValueType.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssociateProto::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssociateProto::AssociateProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_archive_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AssociateProto)
}
AssociateProto::AssociateProto(const AssociateProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AssociateProto)
}

void AssociateProto::SharedCtor() {
  _cached_size_ = 0;
}

AssociateProto::~AssociateProto() {
  // @@protoc_insertion_point(destructor:AssociateProto)
  SharedDtor();
}

void AssociateProto::SharedDtor() {
}

void AssociateProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssociateProto::descriptor() {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[4].descriptor;
}

const AssociateProto& AssociateProto::default_instance() {
  protobuf_archive_2eproto::InitDefaults();
  return *internal_default_instance();
}

AssociateProto* AssociateProto::New(::google::protobuf::Arena* arena) const {
  AssociateProto* n = new AssociateProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssociateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:AssociateProto)
  values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AssociateProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AssociateProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AssociateProto.ValueType values = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AssociateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AssociateProto)
  return false;
#undef DO_
}

void AssociateProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AssociateProto)
  // repeated .AssociateProto.ValueType values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AssociateProto)
}

::google::protobuf::uint8* AssociateProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AssociateProto)
  // repeated .AssociateProto.ValueType values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->values(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AssociateProto)
  return target;
}

size_t AssociateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssociateProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .AssociateProto.ValueType values = 1;
  {
    unsigned int count = this->values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssociateProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AssociateProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AssociateProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssociateProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AssociateProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AssociateProto)
    MergeFrom(*source);
  }
}

void AssociateProto::MergeFrom(const AssociateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AssociateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
}

void AssociateProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AssociateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssociateProto::CopyFrom(const AssociateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssociateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssociateProto::IsInitialized() const {
  return true;
}

void AssociateProto::Swap(AssociateProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssociateProto::InternalSwap(AssociateProto* other) {
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssociateProto::GetMetadata() const {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssociateProto

// repeated .AssociateProto.ValueType values = 1;
int AssociateProto::values_size() const {
  return values_.size();
}
void AssociateProto::clear_values() {
  values_.Clear();
}
const ::AssociateProto_ValueType& AssociateProto::values(int index) const {
  // @@protoc_insertion_point(field_get:AssociateProto.values)
  return values_.Get(index);
}
::AssociateProto_ValueType* AssociateProto::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:AssociateProto.values)
  return values_.Mutable(index);
}
::AssociateProto_ValueType* AssociateProto::add_values() {
  // @@protoc_insertion_point(field_add:AssociateProto.values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::AssociateProto_ValueType >*
AssociateProto::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:AssociateProto.values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::AssociateProto_ValueType >&
AssociateProto::values() const {
  // @@protoc_insertion_point(field_list:AssociateProto.values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UInt32Proto::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UInt32Proto::UInt32Proto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_archive_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UInt32Proto)
}
UInt32Proto::UInt32Proto(const UInt32Proto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:UInt32Proto)
}

void UInt32Proto::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0u;
}

UInt32Proto::~UInt32Proto() {
  // @@protoc_insertion_point(destructor:UInt32Proto)
  SharedDtor();
}

void UInt32Proto::SharedDtor() {
}

void UInt32Proto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UInt32Proto::descriptor() {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[5].descriptor;
}

const UInt32Proto& UInt32Proto::default_instance() {
  protobuf_archive_2eproto::InitDefaults();
  return *internal_default_instance();
}

UInt32Proto* UInt32Proto::New(::google::protobuf::Arena* arena) const {
  UInt32Proto* n = new UInt32Proto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UInt32Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:UInt32Proto)
  value_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UInt32Proto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UInt32Proto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 value = 1;
      case 1: {
        if (tag == 8u) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UInt32Proto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UInt32Proto)
  return false;
#undef DO_
}

void UInt32Proto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UInt32Proto)
  // optional uint32 value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UInt32Proto)
}

::google::protobuf::uint8* UInt32Proto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UInt32Proto)
  // optional uint32 value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UInt32Proto)
  return target;
}

size_t UInt32Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UInt32Proto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UInt32Proto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UInt32Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const UInt32Proto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UInt32Proto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UInt32Proto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UInt32Proto)
    MergeFrom(*source);
  }
}

void UInt32Proto::MergeFrom(const UInt32Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UInt32Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    set_value(from.value());
  }
}

void UInt32Proto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UInt32Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UInt32Proto::CopyFrom(const UInt32Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UInt32Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UInt32Proto::IsInitialized() const {
  return true;
}

void UInt32Proto::Swap(UInt32Proto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UInt32Proto::InternalSwap(UInt32Proto* other) {
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UInt32Proto::GetMetadata() const {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UInt32Proto

// optional uint32 value = 1;
bool UInt32Proto::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UInt32Proto::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void UInt32Proto::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void UInt32Proto::clear_value() {
  value_ = 0u;
  clear_has_value();
}
::google::protobuf::uint32 UInt32Proto::value() const {
  // @@protoc_insertion_point(field_get:UInt32Proto.value)
  return value_;
}
void UInt32Proto::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:UInt32Proto.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringProto::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringProto::StringProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_archive_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StringProto)
}
StringProto::StringProto(const StringProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:StringProto)
}

void StringProto::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StringProto::~StringProto() {
  // @@protoc_insertion_point(destructor:StringProto)
  SharedDtor();
}

void StringProto::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringProto::descriptor() {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[6].descriptor;
}

const StringProto& StringProto::default_instance() {
  protobuf_archive_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringProto* StringProto::New(::google::protobuf::Arena* arena) const {
  StringProto* n = new StringProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringProto::Clear() {
// @@protoc_insertion_point(message_clear_start:StringProto)
  if (has_value()) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StringProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string value = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StringProto.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StringProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StringProto)
  return false;
#undef DO_
}

void StringProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StringProto)
  // optional string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StringProto.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StringProto)
}

::google::protobuf::uint8* StringProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StringProto)
  // optional string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StringProto.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StringProto)
  return target;
}

size_t StringProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StringProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StringProto)
  GOOGLE_DCHECK_NE(&from, this);
  const StringProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StringProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StringProto)
    MergeFrom(*source);
  }
}

void StringProto::MergeFrom(const StringProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StringProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    set_has_value();
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void StringProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StringProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringProto::CopyFrom(const StringProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StringProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringProto::IsInitialized() const {
  return true;
}

void StringProto::Swap(StringProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringProto::InternalSwap(StringProto* other) {
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringProto::GetMetadata() const {
  protobuf_archive_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_archive_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringProto

// optional string value = 1;
bool StringProto::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StringProto::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void StringProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void StringProto::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& StringProto::value() const {
  // @@protoc_insertion_point(field_get:StringProto.value)
  return value_.GetNoArena();
}
void StringProto::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StringProto.value)
}
#if LANG_CXX11
void StringProto::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StringProto.value)
}
#endif
void StringProto::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StringProto.value)
}
void StringProto::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StringProto.value)
}
::std::string* StringProto::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:StringProto.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringProto::release_value() {
  // @@protoc_insertion_point(field_release:StringProto.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringProto::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:StringProto.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
